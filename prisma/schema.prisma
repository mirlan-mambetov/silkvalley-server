// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ###### USER
model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  username String
  email String @unique
  password String
  avatar String? @default("https://ui-avatars.com/api/?background=random")
  phone Int? @default(000000000)
  featured Products[]

  role EnumUserRole[] @default([USER])
}
enum EnumUserRole {
	ADMIN 
	USER 
}

enum EnumProductType {
	WOMAN 
	MAN
  SMARTPHONES
  ALL
  TV
  APPLE
  SAMSUNG
  ELECTRONICS
}

// ###### PRODUCTS
model Products {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  title String @unique
  description String 
  slug String @unique
  images ProductImages[]
  poster String
  price Float
  rating Int? @default(0)
  discount Int?
  totalReviews Int?
  video String?

  brand ProductBrand? @relation(fields: [brandId], references: [id])
  brandId Int? @map("brand_id")

  category ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId Int @map("category_id")
  attributes ProductAttributes[]

  exclusive Boolean? @default(false)

  user User? @relation(fields: [userId], references: [id])
  userId Int?

  additianal_information ProductAdditianalInformation[]

  dimensions ProductDimensions?

  views Int? @default(0)

  productType EnumProductType? @default(ALL)
}

// ###### PRODUCTS BRANDS
model ProductBrand{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  name String
  description String?

  products Products[]
}



// ###### PRODUCTS ADDITIANAL INFORMATION
model ProductAdditianalInformation{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  name String
  value String

  product Products? @relation(fields: [productId], references: [id])
  productId Int?

  @@map("product_additianal_information")
}

// ###### PRODUCTS Dimensions
model ProductDimensions{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  form_factors String?
  packing_size String?
  color_packing String?
  

  products Products? @relation(fields: [productsId], references: [id])
  productsId Int? @unique

  @@map("product_dimensions")
}

// ###### PRODUCTS ATTRIBUTES
model ProductAttributes {

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  colors String[]
  sizes String[]
  ram Int?
  storageMemory Int? @map("storage_memory")
  weight Int?
  mainCamera Float? @map("main_camera")
  frontCamera Float? @map("front_camera")
  sheetQuantity Int? @map("sheet_quantity")
  author String? 
  yearOfPublication Int?
  publishingHouse String? @map("publishing_house")
  product Products? @relation(fields: [productId], references: [id])
  productId Int? @unique
  @@map("product_attributes")
}

// ###### PRODUCTS IMAGES
model ProductImages {

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  color String
  images String[]

  product Products @relation(fields: [productId], references: [id])
  productId Int
  @@map("product_images")
}

// ###### PRODUCTS ATTRIBUTES
model Category {

  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  name String @unique
  slug String @unique
  icon String?
  
  categories ProductCategory[] 
}

model ProductCategory {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  name String 
  slug String @unique
  icon String?

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int? @map("category_id")

  products Products[]
}


// ###### PRODUCTS REVIEWS
// model ProductReview {

//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

//   rating Int
//   text String

//   products Products[]
// }


// ###### USERS
// model Users {

//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

//   name String
//   email String @unique
//   avatar String?  @default("https://img.freepik.com/free-vector/mysterious-mafia-man-smoking-cigarette_52683-34828.jpg?w=740&t=st=1694444364~exp=1694444964~hmac=d8f796895eef4ddecd38777dc9bfa8794dd63672d66cf795d8b297cd2ceb7d66")

//   products Products[]
// }
