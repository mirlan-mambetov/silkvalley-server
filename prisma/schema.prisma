// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER ROLES ENUM
enum UserRoles {
  USER
  ADMIN
  MODERATOR
  SUPERUSER
  OWNER
}

//#### USER
model User{

  id  Int @id @default(autoincrement())

  name String
  
  email String @unique

  phoneNumber Int @map("phone_number")

  password String

  avatar String? @default("")

  role UserRoles[] @default([USER])
  
  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
}

//#### PRODUCT
model Product {
  id  Int @id @default(autoincrement())

  // Название товара [может в дайльнейшем будет переименовано на 'name']
  title String

  // Подзаголовок
  subtitle String @map("sub_title")

  // Описание
  description String 

  // [ALIAS]
  alias String @unique

  // Постер
  poster String

  // Цена
  price Int

  // Артикул
  articleNumber String @unique @map("article_number")

  // Рейтинг товара
  rating Int?

  // Видеоролик
  video String? 

  // Скидка на товар
  discount Int?

  // Размеры товара если одежда
  sizes String[]

  // Картинки изображения
  images ProductImage[]

  // Хитотвый товар
  isHit Boolean? @map("is_hit") @default(false)

  // Новинка ли
  isNew Boolean? @map("is_new") @default(false)

  // Аттрибуты товара связь
  specifications ProductSpecification?

  // Количество на складе
  quantity Int @default(1)

  // Продан сколько раз
  sales Int? @default(0)

  // Связь с основной с главными категориями
  mainCategory MainCategory? @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int? @map("main_category_id")

  // Связь с подкатегориями
  secondCategory SecondCategory? @relation(fields: [secondCategoryId], references: [id])
  secondCategoryId Int? @map("second_category_id")

  // Связь дочернимии категориями
  childsCategory ChildsCategories? @relation(fields: [childsCategoryId], references: [id])
  childsCategoryId Int? @map("childs_category_id")

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

}
//#### PRODUCT SPECIFICATIONS
model ProductSpecification {
  id            Int @id @default(autoincrement())

  attributes Productattribute[]

  productId     Int @map("product_id") @unique
  product       Product  @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("product_specification")
}
//#### PRODUCT ATTRIBUTES
model Productattribute {
  id            Int @id @default(autoincrement())

  name          String 

  value   String

  specification ProductSpecification @relation(fields: [specificationId], references: [id])
  specificationId Int @map("specification_id")

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("attribute")
}

//#### PRODUCT IMAGES
model ProductImage {
  id            Int @id @default(autoincrement())

  color          String 

  image   String[]

  product Product @relation(fields: [productId], references: [id])
  productId Int @map("product_id") 

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("product_image")
}


//#### MainCategory
model MainCategory {
  id            Int @id @default(autoincrement())

  name String @unique
  slug String @unique

  categories SecondCategory[]

  products Product[]

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("categories")
}

//#### SECOND CATEGORIES
model SecondCategory {
  id            Int @id @default(autoincrement())

  name String
  slug String @unique

  products Product[]

  mainCategory MainCategory @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int @map("main_category_id")

  childsCategories ChildsCategories[]

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("second_category")
}

//#### MainCategory
model ChildsCategories {
  id            Int @id @default(autoincrement())

  name String
  slug String @unique

  products Product[]

  parentCategory SecondCategory @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId Int @map("parent_category_id")

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  @@map("childs_categories")
}